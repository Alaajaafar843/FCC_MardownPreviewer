{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","input","placeholder","handleChange","bind","event","this","setState","target","value","id","className","class","style","fontSize","padding","onChange","dangerouslySetInnerHTML","__html","marked","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAMMA,E,kDAEJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAQ,CACXC,MAAQC,GAGV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAPJ,E,gDAWlB,SAAaC,GAEXC,KAAKC,SAAS,CAEZN,MAAQI,EAAMG,OAAOC,U,oBAOzB,WACE,OACE,sBAAKC,GAAG,MAAR,UACE,cAAC,IAAD,IACA,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAU,mCAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKC,MAAM,UAAX,SACE,sBAAKD,UAAU,+BAAf,UACA,mBAAGA,UAAU,MAAMC,MAAM,uBAAuB,cAAY,OAAOC,MAAO,CAACC,SAAS,OAASC,QAAQ,SACrG,oBAAIJ,UAAU,MAAd,yBAGF,0BAAUD,GAAG,SAASD,MAAOH,KAAKN,MAAMC,MAAOe,SAAUV,KAAKH,kBAIlE,sBAAKQ,UAAU,iBAAf,UACI,qBAAKC,MAAM,UAAX,SACE,sBAAKD,UAAU,+BAAf,UACA,mBAAGA,UAAU,MAAMC,MAAM,uBAAuB,cAAY,OAAOC,MAAO,CAACC,SAAS,OAASC,QAAS,SACtG,oBAAIJ,UAAU,MAAd,4BAGF,qBAAKD,GAAG,UAAUO,wBAAyB,CAACC,OAAQC,IAAOb,KAAKN,MAAMC,yB,GAhDxEmB,IAAMC,WA8DlBnB,EAAW,ypCA6CFJ,ICrGAwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8163bbb2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ReactFCCtest from 'react-fcctest';\nimport marked from 'marked';\nimport 'font-awesome/css/font-awesome.min.css';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      input : placeholder\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n\n  } \n\n  handleChange(event) {\n\n    this.setState({\n\n      input : event.target.value\n\n    });\n\n  }\n\n\n  render() {\n    return (\n      <div id=\"App\">\n        <ReactFCCtest />\n        <div className=\"container\">\n            <div className='d-flex align-items-stretch w-100'>\n                <div className='p-2 w-50 h-100'>\n                    <div class=\"toolbar\">\n                      <div className=\"d-flex justify-content-start\">\n                      <i className='p-2' class=\"fa fa-free-code-camp\" aria-hidden=\"true\" style={{fontSize:'30px' , padding:'5px'}}></i>\n                      <h3 className='p-2'>Editor</h3>\n                    </div>\n                    </div>\n                    <textarea id='editor' value={this.state.input} onChange={this.handleChange}>\n\n                    </textarea>\n                </div>\n                <div className='p-2 w-50 h-100'>\n                    <div class=\"toolbar\">\n                      <div className=\"d-flex justify-content-start\">\n                      <i className='p-2' class=\"fa fa-free-code-camp\" aria-hidden=\"true\" style={{fontSize:'30px' , padding: '5px'}}></i>\n                      <h3 className='p-2'>Previewer</h3>\n                    </div>\n                    </div>\n                    <div id=\"preview\" dangerouslySetInnerHTML={{__html: marked(this.state.input),}}>\n                      \n                    </div>\n                </div>\n            </div>\n        </div>\n            \n      </div>\n    )\n  }\n\n}\n\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}